# Generated by Django 5.2.5 on 2025-09-07 17:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('assessments', '0004_agegroup_psychometrictestcategory_exam_maintenance_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TestCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(max_length=500)),
                ('assessment_type', models.CharField(choices=[('academic', 'Academic Assessment'), ('psychological', 'Psychological Assessment'), ('physical', 'Physical Assessment'), ('career', 'Career Assessment'), ('dmit', 'DMIT Assessment'), ('aptitude', 'Aptitude Test'), ('personality', 'Personality Test'), ('skill', 'Skill Assessment'), ('cognitive', 'Cognitive Assessment'), ('behavioral', 'Behavioral Assessment')], max_length=20)),
                ('curriculum', models.CharField(choices=[('CBSE', 'CBSE'), ('ICSE', 'ICSE'), ('IGCSE', 'IGCSE'), ('IB', 'International Baccalaureate'), ('STATE', 'State Board'), ('GENERAL', 'General'), ('INTERNATIONAL', 'International')], default='GENERAL', max_length=15)),
                ('target_audience', models.CharField(choices=[('nursery', 'Nursery (2-4 years)'), ('pre_primary', 'Pre-Primary (4-6 years)'), ('primary', 'Primary (6-10 years)'), ('middle', 'Middle School (10-14 years)'), ('secondary', 'Secondary (14-16 years)'), ('senior_secondary', 'Senior Secondary (16-18 years)'), ('adult', 'Adult (18+ years)'), ('all_ages', 'All Ages')], max_length=20)),
                ('grade_levels', models.JSONField(default=list)),
                ('age_range_min', models.IntegerField(default=0)),
                ('age_range_max', models.IntegerField(default=100)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=15)),
                ('duration_minutes', models.IntegerField(default=60)),
                ('total_questions', models.IntegerField(default=50)),
                ('passing_score', models.DecimalField(decimal_places=2, default=40.0, max_digits=5)),
                ('max_score', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('price_inr', models.DecimalField(decimal_places=2, default=99.0, max_digits=8)),
                ('is_free', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_new', models.BooleanField(default=False)),
                ('ai_insights', models.JSONField(blank=True, default=dict)),
                ('success_rate', models.DecimalField(decimal_places=2, default=75.0, max_digits=5)),
                ('average_score', models.DecimalField(decimal_places=2, default=65.0, max_digits=5)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=85.0, max_digits=5)),
                ('instructions', models.TextField(blank=True)),
                ('prerequisites', models.TextField(blank=True)),
                ('learning_outcomes', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('icon_name', models.CharField(default='academic-cap', max_length=50)),
                ('cover_image_url', models.URLField(blank=True)),
                ('total_attempts', models.IntegerField(default=0)),
                ('total_completions', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=4.0, max_digits=3)),
                ('total_ratings', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'test_catalog',
                'ordering': ['-is_featured', '-is_popular', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('started', 'Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned'), ('expired', 'Expired')], default='started', max_length=15)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('time_taken_minutes', models.IntegerField(blank=True, null=True)),
                ('responses', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='assessments.testcatalog')),
            ],
            options={
                'db_table': 'test_attempts',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='TestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='academic-cap', max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.testcategory')),
            ],
            options={
                'verbose_name_plural': 'Test Categories',
                'db_table': 'test_categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='testcatalog',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.testcategory'),
        ),
        migrations.CreateModel(
            name='TestReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('title', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('is_verified', models.BooleanField(default=False)),
                ('is_helpful', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='assessments.testcatalog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'test_reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='testcatalog',
            index=models.Index(fields=['assessment_type'], name='test_catalo_assessm_91c31e_idx'),
        ),
        migrations.AddIndex(
            model_name='testcatalog',
            index=models.Index(fields=['category'], name='test_catalo_categor_3e56d0_idx'),
        ),
        migrations.AddIndex(
            model_name='testcatalog',
            index=models.Index(fields=['target_audience'], name='test_catalo_target__e149cc_idx'),
        ),
        migrations.AddIndex(
            model_name='testcatalog',
            index=models.Index(fields=['curriculum'], name='test_catalo_curricu_cb197c_idx'),
        ),
        migrations.AddIndex(
            model_name='testcatalog',
            index=models.Index(fields=['is_active', 'is_published'], name='test_catalo_is_acti_c38280_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='testreview',
            unique_together={('test', 'user')},
        ),
    ]
